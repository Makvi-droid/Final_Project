
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author ADMIN
 */
public class StudentGrades extends javax.swing.JFrame {

    /**
     * Creates new form StudentGrades
     */
    public StudentGrades() {
        initComponents();
         
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size.height/2 - getHeight()/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        studentLastNametxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        yearLvl = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox<>();
        studentIDtxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        studentFirstNametxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        studentMiddleNametxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        records = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        gradePanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        assignmentPrelim = new javax.swing.JTextField();
        examPrelim = new javax.swing.JTextField();
        activitiesPrelim = new javax.swing.JTextField();
        quizPrelim = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        quizMidterm = new javax.swing.JTextField();
        activitiesMidterm = new javax.swing.JTextField();
        assignmentsMidterm = new javax.swing.JTextField();
        examMidterm = new javax.swing.JTextField();
        prelimTxt = new javax.swing.JTextField();
        prelimBtn = new javax.swing.JToggleButton();
        midtermBtn = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        quizFinals = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        activitiesFinal = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        assignmentsFinals = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        examFinals = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        midtermTxt = new javax.swing.JTextField();
        finalBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        gradesArea = new javax.swing.JTextArea();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        prelimGrade = new javax.swing.JTextField();
        midtermGrade = new javax.swing.JTextField();
        finalsGrade = new javax.swing.JTextField();
        registerBtn = new javax.swing.JButton();
        studentRecordsBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel5.setText("Year Level:");

        yearLvl.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1st year", "2nd year", "3rd year", "4th year", " " }));

        jLabel6.setText(" Status:");

        jLabel1.setText("Student ID:");

        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Regular", "Irregular", " " }));

        jLabel2.setText("Student Middle Name:");

        jLabel3.setText("Student First Name:");

        jLabel4.setText("Student Last Name:");

        records.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "student_id", "student_first_name", "student_middle_name", "student_last_name", "year_level", "status"
            }
        ));
        records.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recordsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(records);

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        gradePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel18.setText("Prelim:");

        jLabel7.setText("Quiz(%):");

        jLabel8.setText("Activities(%):");

        jLabel9.setText("Assignments(%):");

        jLabel10.setText("Exam(%):");

        jLabel11.setText("Midterm:");

        jLabel12.setText("Quiz(%):");

        jLabel13.setText("Activities(%):");

        jLabel14.setText("Assignments(%):");

        jLabel15.setText("Exam(%):");

        jLabel16.setText("Prelim grade(%):");

        prelimBtn.setText("Calculate Prelim");
        prelimBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prelimBtnActionPerformed(evt);
            }
        });

        midtermBtn.setText("Calculate Midterm");
        midtermBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                midtermBtnActionPerformed(evt);
            }
        });

        jLabel17.setText("Finals:");

        jLabel19.setText("Quiz(%):");

        jLabel20.setText("Activities(%):");

        jLabel21.setText("Assignments(%):");

        jLabel22.setText("Exam(%):");

        jLabel23.setText("Midterm Grade(%):");

        finalBtn.setText("Calculate Final");
        finalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout gradePanelLayout = new javax.swing.GroupLayout(gradePanel);
        gradePanel.setLayout(gradePanelLayout);
        gradePanelLayout.setHorizontalGroup(
            gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(finalBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(gradePanelLayout.createSequentialGroup()
                                    .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGap(18, 18, 18)
                                    .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(activitiesPrelim, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                                        .addComponent(quizPrelim)))
                                .addGroup(gradePanelLayout.createSequentialGroup()
                                    .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel13))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(assignmentPrelim)
                                        .addComponent(examPrelim)
                                        .addComponent(quizMidterm)
                                        .addComponent(activitiesMidterm, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)))
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(gradePanelLayout.createSequentialGroup()
                                    .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(assignmentsMidterm)
                                        .addComponent(examMidterm))))
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(gradePanelLayout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(midtermBtn)
                                    .addComponent(prelimBtn)))
                            .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, gradePanelLayout.createSequentialGroup()
                                    .addComponent(jLabel21)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(assignmentsFinals, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, gradePanelLayout.createSequentialGroup()
                                    .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel23))
                                    .addGap(18, 18, 18)
                                    .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(midtermTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(examFinals, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(quizFinals, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(gradePanelLayout.createSequentialGroup()
                            .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(gradePanelLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(prelimTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(gradePanelLayout.createSequentialGroup()
                                    .addGap(31, 31, 31)
                                    .addComponent(activitiesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
        );
        gradePanelLayout.setVerticalGroup(
            gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(quizPrelim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(activitiesPrelim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(assignmentPrelim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(examPrelim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(prelimBtn)
                .addGap(2, 2, 2)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(quizMidterm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(activitiesMidterm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(assignmentsMidterm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(examMidterm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(prelimTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(midtermBtn)
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(quizFinals, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(activitiesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(assignmentsFinals, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(examFinals, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(midtermTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(finalBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(gradePanel);

        gradesArea.setColumns(20);
        gradesArea.setRows(5);
        jScrollPane3.setViewportView(gradesArea);

        jLabel24.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel24.setText("Prelim Grade:");

        jLabel25.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel25.setText("Midterm Grade:");

        jLabel26.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel26.setText("Finals Grade:");

        registerBtn.setText("Register");
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });

        studentRecordsBtn.setText("Student Records");
        studentRecordsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentRecordsBtnActionPerformed(evt);
            }
        });

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(finalsGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(prelimGrade, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(midtermGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(studentRecordsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(registerBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(backBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(studentIDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(studentFirstNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(studentMiddleNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(studentLastNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(yearLvl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 795, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentIDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(studentFirstNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentMiddleNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentLastNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yearLvl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 3, Short.MAX_VALUE)))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(prelimGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(registerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(studentRecordsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)))
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(midtermGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(73, 73, 73)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(finalsGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void studentRecordsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentRecordsBtnActionPerformed
        Student_Records studentRecords = new Student_Records();
        studentRecords.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_studentRecordsBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        Main main = new Main();
        main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    private void midtermBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_midtermBtnActionPerformed
        try {
            double quiz = Double.parseDouble(quizMidterm.getText());
            double activities = Double.parseDouble(activitiesMidterm.getText());
            double assignments = Double.parseDouble(assignmentsMidterm.getText());
            double exam = Double.parseDouble(examMidterm.getText());
            double prelim = Double.parseDouble(prelimGrade.getText()); // will hold the computed prelimGrade

            // Calculate Midterm grade using the formula
            double midterm = ((((quiz + activities + assignments) / 2) + (exam / 2)) * 0.67) + (prelim * 0.33);

            double midtermInt = (double) midterm;
            midtermGrade.setText(String.valueOf(midtermInt));
            midtermGrade.setEditable(false);
            
            // Update the text area with midterm inputs
            updateGradesTextArea();
        }
        catch (NumberFormatException ex) {
            midtermGrade.setText("Invalid input!");
        }
    }//GEN-LAST:event_midtermBtnActionPerformed

    private void finalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalBtnActionPerformed
        try {
            double quiz = Double.parseDouble(quizFinals.getText());
            double activities = Double.parseDouble(activitiesFinal.getText());
            double assignments = Double.parseDouble(assignmentsFinals.getText());
            double exam = Double.parseDouble(examFinals.getText());
            double midterm = Double.parseDouble(midtermGrade.getText()); // will hold the computed midtermGrade

            // Calculate Final grade using the formula
            double finals = ((((quiz + activities + assignments) / 2) + (exam / 2)) * 0.67) + (midterm * 0.33);

            double finalsInt = (double) finals;
            finalsGrade.setText(String.valueOf(finalsInt));
            finalsGrade.setEditable(false);
            
            // Update the text area with finals inputs
            updateGradesTextArea();
        }
        catch (NumberFormatException ex) {
            finalsGrade.setText("Invalid input!");
        }
    }//GEN-LAST:event_finalBtnActionPerformed

    private void recordsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recordsMouseClicked
        try(Connection connection = DriverManager.getConnection("jdbc:sqlite:.//database//studentInfo.db")){
            
            String query = "SELECT * FROM student";
            try(PreparedStatement statement = connection.prepareStatement(query)){
                ResultSet resultSet = statement.executeQuery();
                
                DefaultTableModel model = new DefaultTableModel();
                
                model.addColumn("student_id");
                model.addColumn("student_first_name");
                model.addColumn("student_middle_name");
                model.addColumn("student_last_name");
                model.addColumn("year_level");
                model.addColumn("status");
               
                
                while(resultSet.next()){
                    
                    String id = resultSet.getString("student_id");
                    String empName = resultSet.getString("student_first_name");
                    String department = resultSet.getString("student_middle_name");
                    String salary = resultSet.getString("student_last_name");
                    String schedule = resultSet.getString("year_level");
                    String status = resultSet.getString("status");
                   
                    
                    model.addRow(new Object[]{id, empName, department, salary, schedule, status});
                    
                }
                
                records.setModel(model);
                
            }
            connection.close();
            
        }
        catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_recordsMouseClicked

    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // Get student information from text fields
        String studentID = studentIDtxt.getText();
        String firstName = studentFirstNametxt.getText();
        String middleName = studentMiddleNametxt.getText();
        String lastName = studentLastNametxt.getText();
        String yearLevel = yearLvl.getSelectedItem().toString();
        String studentStatus = status.getSelectedItem().toString();
        
        // Get grades (if available)
        String prelim = prelimGrade.getText().isEmpty() ? "0" : prelimGrade.getText();
        String midterm = midtermGrade.getText().isEmpty() ? "0" : midtermGrade.getText();
        String finals = finalsGrade.getText().isEmpty() ? "0" : finalsGrade.getText();
        
        // Validate the input fields
        if (studentID.isEmpty() || firstName.isEmpty() || lastName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Student ID, First Name, and Last Name are required fields!", 
                                         "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Connection conn = null;
        java.sql.PreparedStatement pstmt = null;
        
        try {
            // Get connection from SQLiteConnection class
            conn = SQLiteConnection.getConnection();
            
            // SQL query to insert data into studentGrades table
            String sql = "INSERT INTO studentGrades(student_id, student_first_name, student_middle_name, " +
                         "student_last_name, year_level, status, prelimGrade, midtermGrade, finalGrade) " +
                         "VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?)";
            
            pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, studentID);
            pstmt.setString(2, firstName);
            pstmt.setString(3, middleName);
            pstmt.setString(4, lastName);
            pstmt.setString(5, yearLevel);
            pstmt.setString(6, studentStatus);
            pstmt.setDouble(7, Double.parseDouble(prelim));
            pstmt.setDouble(8, Double.parseDouble(midterm));
            pstmt.setDouble(9, Double.parseDouble(finals));
            
            // Execute the query
            int rowsAffected = pstmt.executeUpdate();
            
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Student record registered successfully!", 
                                             "Success", JOptionPane.INFORMATION_MESSAGE);
                
                
                
                // Clear the input fields
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to register student record!", 
                                             "Error", JOptionPane.ERROR_MESSAGE);
            }
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database Error: " + ex.getMessage(), 
                                         "SQL Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Invalid grade format! Please ensure all grades are numbers.", 
                                         "Input Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (pstmt != null) pstmt.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }
    
 

    // Method to clear input fields after successful registration
    private void clearFields() {
        studentIDtxt.setText("");
        studentFirstNametxt.setText("");
        studentMiddleNametxt.setText("");
        studentLastNametxt.setText("");
        yearLvl.setSelectedIndex(0);
        status.setSelectedIndex(0);
        
        // Clear grade fields
        quizPrelim.setText("");
        activitiesPrelim.setText("");
        assignmentPrelim.setText("");
        examPrelim.setText("");
        prelimGrade.setText("");
        
        quizMidterm.setText("");
        activitiesMidterm.setText("");
        assignmentsMidterm.setText("");
        examMidterm.setText("");
        prelimTxt.setText("");
        midtermGrade.setText("");
        
        quizFinals.setText("");
        activitiesFinal.setText("");
        assignmentsFinals.setText("");
        examFinals.setText("");
        midtermTxt.setText("");
        finalsGrade.setText("");
        
        // Clear the text area
        gradesArea.setText("");
    }

       
    
 // First, we need to add code to update the text area in each button action method

    private void prelimBtnActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            double quiz = Double.parseDouble(quizPrelim.getText());
            double activities = Double.parseDouble(activitiesPrelim.getText());
            double assignments = Double.parseDouble(assignmentPrelim.getText());
            double exam = Double.parseDouble(examPrelim.getText());

            // Calculate Prelim grade using the formula
            double prelim = ((quiz + activities + assignments) / 2) + (exam / 2);

            double prelimInt = (double) prelim;
            prelimGrade.setText(String.valueOf(prelimInt));
            prelimGrade.setEditable(false);
            
            // Update the text area with prelim inputs
            updateGradesTextArea();
        }
        catch (NumberFormatException ex) {
            prelimGrade.setText("Invalid input!");
        }
    }

    

    

    // Add a new method to update the text area with all grade inputs
    private void updateGradesTextArea() {
        StringBuilder sb = new StringBuilder();
        
        // Get student information
        String studentID = studentIDtxt.getText();
        String firstName = studentFirstNametxt.getText();
        String lastName = studentLastNametxt.getText();
        
        // Add student info header
        sb.append("Student Information:\n");
        sb.append("---------------------------\n");
        sb.append("ID: ").append(studentID).append("\n");
        sb.append("Name: ").append(firstName).append(" ").append(lastName).append("\n");
        sb.append("Year Level: ").append(yearLvl.getSelectedItem().toString()).append("\n");
        sb.append("Status: ").append(status.getSelectedItem().toString()).append("\n\n");
        
        // Add Prelim grades
        sb.append("PRELIM GRADES\n");
        sb.append("---------------------------\n");
        sb.append("Quiz: ").append(quizPrelim.getText()).append("\n");
        sb.append("Activities: ").append(activitiesPrelim.getText()).append("\n");
        sb.append("Assignments: ").append(assignmentPrelim.getText()).append("\n");
        sb.append("Exam: ").append(examPrelim.getText()).append("\n");
        sb.append("Prelim Grade: ").append(prelimGrade.getText()).append("\n\n");
        
        // Add Midterm grades if available
        if (!quizMidterm.getText().isEmpty()) {
            sb.append("MIDTERM GRADES\n");
            sb.append("---------------------------\n");
            sb.append("Quiz: ").append(quizMidterm.getText()).append("\n");
            sb.append("Activities: ").append(activitiesMidterm.getText()).append("\n");
            sb.append("Assignments: ").append(assignmentsMidterm.getText()).append("\n");
            sb.append("Exam: ").append(examMidterm.getText()).append("\n");
            sb.append("Previous Prelim: ").append(prelimTxt.getText()).append("\n");
            sb.append("Midterm Grade: ").append(midtermGrade.getText()).append("\n\n");
        }
        
        // Add Finals grades if available
        if (!quizFinals.getText().isEmpty()) {
            sb.append("FINALS GRADES\n");
            sb.append("---------------------------\n");
            sb.append("Quiz: ").append(quizFinals.getText()).append("\n");
            sb.append("Activities: ").append(activitiesFinal.getText()).append("\n");
            sb.append("Assignments: ").append(assignmentsFinals.getText()).append("\n");
            sb.append("Exam: ").append(examFinals.getText()).append("\n");
            sb.append("Previous Midterm: ").append(midtermTxt.getText()).append("\n");
            sb.append("Finals Grade: ").append(finalsGrade.getText()).append("\n\n");
        }
        
        // Set the text to the text area
        gradesArea.setText(sb.toString());
    }

    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentGrades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentGrades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentGrades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentGrades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentGrades().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField activitiesFinal;
    private javax.swing.JTextField activitiesMidterm;
    private javax.swing.JTextField activitiesPrelim;
    private javax.swing.JTextField assignmentPrelim;
    private javax.swing.JTextField assignmentsFinals;
    private javax.swing.JTextField assignmentsMidterm;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField examFinals;
    private javax.swing.JTextField examMidterm;
    private javax.swing.JTextField examPrelim;
    private javax.swing.JButton finalBtn;
    private javax.swing.JTextField finalsGrade;
    private javax.swing.JPanel gradePanel;
    private javax.swing.JTextArea gradesArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton midtermBtn;
    private javax.swing.JTextField midtermGrade;
    private javax.swing.JTextField midtermTxt;
    private javax.swing.JToggleButton prelimBtn;
    private javax.swing.JTextField prelimGrade;
    private javax.swing.JTextField prelimTxt;
    private javax.swing.JTextField quizFinals;
    private javax.swing.JTextField quizMidterm;
    private javax.swing.JTextField quizPrelim;
    private javax.swing.JTable records;
    private javax.swing.JButton registerBtn;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JTextField studentFirstNametxt;
    private javax.swing.JTextField studentIDtxt;
    private javax.swing.JTextField studentLastNametxt;
    private javax.swing.JTextField studentMiddleNametxt;
    private javax.swing.JButton studentRecordsBtn;
    private javax.swing.JComboBox<String> yearLvl;
    // End of variables declaration//GEN-END:variables
}
